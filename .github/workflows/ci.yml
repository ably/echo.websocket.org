name: CI
on:
  push:
    branches:
      - '*'
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.21', '1.22', '1.23']
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Set up Go ${{ matrix.go-version }}
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}
        
    - name: Get dependencies
      run: go mod download
      
    - name: Run tests
      run: go test -v -race -timeout 60s ./...
      
    - name: Run tests with coverage
      if: matrix.go-version == '1.21'
      run: go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...
      
    - name: Upload coverage to Codecov
      if: matrix.go-version == '1.21' && success()
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.txt
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: false
        
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
        
    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest
        args: --timeout=5m
        
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
        
    - name: Build
      run: go build -v ./cmd/echo-server
      
    - name: Build for multiple platforms
      run: |
        GOOS=linux GOARCH=amd64 go build -v -o echo-server-linux-amd64 ./cmd/echo-server
        GOOS=linux GOARCH=arm64 go build -v -o echo-server-linux-arm64 ./cmd/echo-server
        GOOS=darwin GOARCH=amd64 go build -v -o echo-server-darwin-amd64 ./cmd/echo-server
        GOOS=darwin GOARCH=arm64 go build -v -o echo-server-darwin-arm64 ./cmd/echo-server
